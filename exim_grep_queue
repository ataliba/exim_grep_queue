#!/bin/env python 
# exim_grep_queue
#
# INFORMATION   : 
# DATE OF BIRTH : 14 NOVEMBER 2012 
# AUTHOR:       : Ataliba de Oliveira Teixeira < ataliba@taliba.eti.br > 
# DESCRIPTION   : Simple plugin to search for specific strings on exim queue 
# LICENSE       : GPLv2
# CHANGELOG     : https://github.com/ataliba/exim_grep_queue
# VERSION       : v1.1 


import re
import sys
import commands
import optparse

# Change this for your path of Exiqgrep 
Exiqgrep="/usr/sbin/exiqgrep"
 
########################
#command line options processing 
#######################

parser = optparse.OptionParser()

parser.add_option('-w', help='arguments', action='store',type='int',default='10')
parser.add_option('-c', help='arguments', action='store',type='int',default='10')
parser.add_option('-S', help='arguments', action='store',type='string',default='')

options, args = parser.parse_args()

critical = options.c
warning = options.w

command = "/usr/bin/sudo " + Exiqgrep + "  -ir " + options.S + "  | wc -l"

#################

Result = commands.getstatusoutput(command)
Queue = int(Result[1])

#Determine state to pass to Nagios
#CRITICAL = 2
#WARNING = 1
#OK = 0

if Queue >= critical:
    print "CRITICAL" + options.S + " Delivering: %d Messages " % (int(Queue))
    sys.exit(2)
elif Queue >= warning:
    print "AN WARNING on " + options.S + " Delivering: %d Messages " % (int(Queue))
    sys.exit(1)
else:
    print options.S + " Delivering is  OK: %d Messages" % (int(Queue))
    sys.exit(0)
